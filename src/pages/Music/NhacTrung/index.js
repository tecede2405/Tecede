
import React, { useState, useRef, useEffect } from "react";
import Tabbar from '../../../component/tabar/index';
import music1 from '../../../audio/NhacTrung/VietsubL√† Anh - M·ªông Nhi√™n ÊòØ‰Ω† - Ê¢¶ÁÑ∂.mp3';
import music2 from '../../../audio/NhacTrung/[Vietsub  Kara] Ng∆∞·ªùi K·∫ø Nhi·ªám - Nh·∫≠m Nhi√™n  ÂêéÁªßËÄÖ - ‰ªªÁÑ∂.mp3';
import music3 from '../../../audio/NhacTrung/Vietsub  Lyrics  Pinyin  Ki√™u ng·∫°o (Âö£Âº†) - en.mp3';
import music4 from '../../../audio/NhacTrung/[VietsubPinyin] ƒê·∫£o kh√¥ng ng∆∞·ªùi (ÁÑ°‰∫∫‰πãÂ≥∂) - Nh·∫≠m Nhi√™n ‰ªªÁÑ∂.mp3';
import music5 from '../../../audio/NhacTrung/[Vietsub] Th√°p R∆°i T·ª± Do - LBI L·ª£i B·ªâ  Ë∑≥Ê•ºÊú∫ - LBIÂà©ÊØî.mp3';
import music6 from '../../../audio/NhacTrung/[Vietsub] [Chinese Songs] Mang Ch·ªßng - √Çm Khuy·∫øt Thi Th√≠nh  ËäíÁ®Æ - Èü≥ÈóïË©©ËÅΩ.mp3';
import music7 from '../../../audio/NhacTrung/[Vietsub] Thi·∫øu ni√™n (Â∞ëÂπ¥) - M·ªông Nhi√™n.mp3';
import music8 from '../../../audio/NhacTrung/‰Ω†ÁöÑÁ≠îÊ°à - ÈòøÂÜó  ƒê√°p √°n c·ªßa b·∫°n - A Nh≈©ng  li ming de na dao guang hui.mp3';
import music9 from '../../../audio/NhacTrung/[VietsubPinyin] ƒê√¢u ƒë√¢u c≈©ng l√† em  YoungCaptain  Âì™ÈáåÈÉΩÊòØ‰Ω† - YoungCaptain.mp3';
import music10 from '../../../audio/NhacTrung/[Vietsub  pinyin] Kh√¥ng bi·∫øt ph·∫£i l√†m sao ‰∏çÁü•ÊâÄÊé™ - V∆∞∆°ng Tƒ©nh VƒÉn Kh√¥ng M·∫≠p ÁéãÈùñÈõØ‰∏çËÉñ  TikTok.mp3';
import music11 from '../../../audio/NhacTrung/[Vietsub] ƒê√¥ng Mi√™n - 2023 - A Nguy·ªát Nguy·ªát, L∆∞u Tri·ªáu V≈©  ÂÜ¨Áú† - 2023 - ÈòøYueYue, ÂàòÂÖÜÂÆá.mp3';
import music12 from '../../../audio/NhacTrung/[Vietsub  Pinyin] Sa V√†o Nguy Hi·ªÉm - C√°t ƒê√¥ng K·ª≥  Ëëõ‰∏úÁê™ - ÊÇ¨Ê∫∫.mp3';
import music13 from '../../../audio/NhacTrung/[Vietsub] C√≥ Th·ªÉ Hay Kh√¥ngÂèØ‰∏çÂèØ‰ª• - Tr∆∞∆°ng T·ª≠ H√†oÂºµÁ¥´Ë±™.mp3';
import music14 from '../../../audio/NhacTrung/[Vietsub  Kara] M·ªôt tri·ªáu kh·∫£ nƒÉng  ‰∏ÄÁôæ‰∏á‰∏™ÂèØËÉΩ ( Tik Tok ).mp3';
import music15 from '../../../audio/NhacTrung/[Vietsub] G·∫∑p em ƒë√∫ng l√∫c - Lu√¢n Tang.mp3';


function NhacTrung() {
  const songs = [
    {
      title: 'G·∫∑p em ƒë√∫ng l√∫c',
      artist: 'Lu√¢n Tang',
      image: 'https://tse4.mm.bing.net/th?id=OIP.4hwkujaoPQpJljpiAiR-_wHaEK&pid=Api&P=0&h=180',
      file: music15,
    },
    {
      title: 'M·ªôt tri·ªáu kh·∫£ nƒÉng',
      artist: '‰∏ÄÁôæ‰∏á‰∏™ÂèØËÉΩ ',
      image: 'https://i.ytimg.com/vi/AL4CSiYoMqA/hqdefault.jpg',
      file: music14,
    },
    {
      title: 'C√≥ Th·ªÉ Hay Kh√¥ng',
      artist: 'Tr∆∞∆°ng T·ª≠ H√†o/ÂºµÁ¥´Ë±™',
      image: 'https://tse2.mm.bing.net/th?id=OIP.8HvlO9bVfbZm-R1-eGOuCAHaEK&pid=Api&P=0&h=180',
      file: music13,
    },
    {
      title: 'Sa V√†o Nguy Hi·ªÉm',
      artist: 'C√°t ƒê√¥ng K·ª≥',
      image: 'https://tse1.mm.bing.net/th?id=OIP.CGYW0x8ufamZsRstbtAc6gAAAA&pid=Api&P=0&h=180',
      file: music12,
    },
    {
      title: 'ƒê√¥ng Mi√™n',
      artist: 'A Nguy·ªát Nguy·ªát, L∆∞u Tri·ªáu V≈©  ÂÜ¨Áú†',
      image: 'https://tse2.mm.bing.net/th?id=OIP.YDSEPLEDaHGkPo91W1V8OQHaEK&pid=Api&P=0&h=180',
      file: music11,
    },
    {
      title: 'L√† Anh',
      artist: 'M·ªông Nhi√™n |„ÄåÊòØ‰Ω† - Ê¢¶ÁÑ∂„Äç',
      image: 'https://tse2.mm.bing.net/th?id=OIP.LKcvKutiRwQ_yYvycGcmUgHaHa&pid=Api&P=0&h=180',
      file: music1,
    },
    {
      title: 'Ng∆∞·ªùi k·∫ø nhi·ªám',
      artist: ' Nh·∫≠m Nhi√™n | ÂêéÁªßËÄÖ - ‰ªªÁÑ∂',
      image: 'https://tse4.mm.bing.net/th?id=OIP.lRYlA8TBnASRc2-_aYCVEgHaEK&pid=Api&P=0&h=180',
      file: music2,
    },
    {
      title: 'Ki√™u ng·∫°o',
      artist: 'en',
      image: 'https://tse4.mm.bing.net/th?id=OIP.FWvRQsq-DMZC9vWNrlg2wgHaEK&pid=Api&P=0&h=180',
      file: music3,
    },
    {
      title: 'ƒê·∫£o kh√¥ng ng∆∞·ªùi',
      artist: 'Nh·∫≠m Nhi√™n ‰ªªÁÑ∂',
      image: 'https://tse2.mm.bing.net/th?id=OIP.K4iJdFS_wNtlI-viCRfyGgHaEK&pid=Api&P=0&h=180',
      file: music4,
    },
    {
      title: 'Th√°p r∆°i t·ª± do',
      artist: 'LBI L·ª£i B·ªâ  Ë∑≥Ê•ºÊú∫',
      image: 'https://tse3.mm.bing.net/th?id=OIP.J0cMqhYHU3_zFfib3hEjNAHaEK&pid=Api&P=0&h=180',
      file: music5,
    },
    {
      title: 'Mang ch·ªßng',
      artist: '√Çm Khuy·∫øt Thi Th√≠nh',
      image: 'https://tse1.mm.bing.net/th?id=OIP.zaxirg4lFkQu7ZJMV3yhyAAAAA&pid=Api&P=0&h=180',
      file: music6,
    },
    {
      title: 'Thi·∫øu ni√™n',
      artist: 'M·ªông Nhi√™n',
      image: 'https://tse2.mm.bing.net/th?id=OIP.e8WPtVl6PihypO3lAPa-FgHaEK&pid=Api&P=0&h=180',
      file: music7,
    },
    {
      title: 'ƒê√°p √°n c·ªßa b·∫°n',
      artist: 'A Nh≈©ng',
      image: 'https://tse3.mm.bing.net/th?id=OIP.5XlGjaUih_8fVxCsWA40rAHaEK&pid=Api&P=0&h=180',
      file: music8,
    },
    {
      title: 'N∆°i ƒë√¢u c≈©ng l√† em',
      artist: 'YoungCaptain',
      image: 'https://tse2.mm.bing.net/th?id=OIP.4An7eZsIHHXC8DjbGaSuuwHaEK&pid=Api&P=0&h=180',
      file: music9,
    },
    {
      title: 'Kh√¥ng bi·∫øt ph·∫£i l√†m sao',
      artist: 'V∆∞∆°ng Tƒ©nh VƒÉn Kh√¥ng M·∫≠p',
      image: 'https://tse1.mm.bing.net/th?id=OIP.FnhgM14pFzq-Typ1cvLo9AHaEK&pid=Api&P=0&h=180',
      file: music10,
    },


    // Th√™m b√†i h√°t v√†o ƒë√¢y
  ];

  const [currentIndex, setCurrentIndex] = useState(null);
  const audioRef = useRef(null);

  useEffect(() => {
    if (currentIndex !== null && audioRef.current) {
      audioRef.current.load();
      audioRef.current.play().catch((err) => {
        console.log("Kh√¥ng th·ªÉ ph√°t t·ª± ƒë·ªông:", err);
      });
    }
  }, [currentIndex]);
  
  const handleEnded = () => {
    const nextIndex = currentIndex + 1;
    if (nextIndex < songs.length) {
      setCurrentIndex(nextIndex);
    } else {
      setCurrentIndex(null); // D·ª´ng khi h·∫øt danh s√°ch
    }
  };

  const handlePlay = (index) => {
    setCurrentIndex(index);
  };

    const handlePrev = () => {
      if (songs.length === 0) return;
      setCurrentIndex((prev) => (prev - 1 + songs.length) % songs.length);
  };

  const handleNext = () => {
      if (songs.length === 0) return;
      setCurrentIndex((prev) => (prev + 1) % songs.length);
  };

  return (
    <>
    <div className="music-container-box"> 
      <Tabbar />
      <div className="music-container">
        {/* music card  */}
        <div className="container mt-4">
            <h2 className="title-box-music text-center">üéµ Nh·∫°c Trung Qu·ªëc</h2>
            <p className="text-center">Nghe bao hay bao suy.</p>


              <div className="row">
                {songs.map((song, index) => (
                  <div className="col-md-5 mb-4" key={index}>
                    <div key={index} className={`music-card d-flex align-items-center p-3 song-item ${currentIndex === index ? "active" : ""}`} onClick={() => handlePlay(index)}>
                      <img src={song.image} className="rounded mr-3" alt={song.title} style={{ width: '50px', height: '50px', objectFit: 'cover' }} />
                      <div className="card-music-body d-flex flex-column">
                        <h5 className="card-title mb-1">{song.title}</h5>
                        <p className="card-text text-muted mb-2">{song.artist}</p>
                      </div>
                    </div>
                  </div>
                ))}
              </div>
          </div>
          {/* music render */}
          {currentIndex !== null && (
                  <div className="audio-container">
                      <div className="music-card d-flex align-items-center p-3">
                          <img
                              src={songs[currentIndex].image}
                              alt={songs[currentIndex].title}
                              className="img-audio"
                              style={{ width: '40px', height: '40px', objectFit: 'cover' }}
                          />
                          <button onClick={handlePrev} className="change-song">‚èÆ</button>
                          <div className="card-music-body d-flex flex-column">
                              <h5 className="card-render-title mb-1">{songs[currentIndex].title}</h5>
                              <p className="card-render-text text-muted mb-2">{songs[currentIndex].artist}</p>
                          </div>
                          <button onClick={handleNext} className="change-song">‚è≠</button>
                      </div>

                      <audio
                          ref={audioRef}
                          controls
                          className="custom-audio"
                          onEnded={handleEnded}  // G·ªçi khi b√†i h√°t k·∫øt th√∫c
                      >
                          <source src={songs[currentIndex].file} type="audio/mpeg" />
                          Tr√¨nh duy·ªát c·ªßa b·∫°n kh√¥ng h·ªó tr·ª£ ph√°t nh·∫°c.
                      </audio>
                  </div>
              )}
      </div>
    </div>
  </>
 )
}

export default NhacTrung;
